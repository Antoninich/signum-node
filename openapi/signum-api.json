{
  "openapi": "3.0.3",
  "info": {
    "title": "Signum Node API",
    "version": "3.4.2",
    "description": "This is the API documentation of the Signum Node",
    "x-logo": {
      "url": ""
    }
  },
  "paths": {
    "/api?requestType=getAccount": {
      "$ref": "./paths/getAccount.json"
    },
    "/api?requestType=addCommitment": {
      "$ref": "./paths/addCommitment.json"
    },
    "/api?requestType=removeCommitment": {
      "$ref": "./paths/removeCommitment.json"
    },
    "/api?requestType=setRewardRecipient": {
      "$ref": "./paths/setRewardRecipient.json"
    },
    "/api?requestType=sendMoney": {
      "$ref": "./paths/sendMoney.json"
    },
    "/api?requestType=sendMoneyMulti": {
      "$ref": "./paths/sendMoneyMulti.json"
    },
    "/api?requestType=sendMoneyMultiSame": {
      "$ref": "./paths/sendMoneyMultiSame.json"
    },
    "/api?requestType=sendMoneySubscription": {
      "$ref": "./paths/sendMoneySubscription.json"
    },
    "/api?requestType=sendMessage": {
      "$ref": "./paths/sendMessage.json"
    },
    "/api?requestType=subscriptionCancel": {
      "$ref": "./paths/subscriptionCancel.json"
    },
    "/api?requestType=setAccountInfo": {
      "$ref": "./paths/setAccountInfo.json"
    },
    "/api?requestType=signTransaction": {
      "$ref": "./paths/signTransaction.json"
    },
    "/api?requestType=broadcastTransaction": {
      "$ref": "./paths/broadcastTransaction.json"
    },
    "/api?requestType=parseTransaction": {
      "$ref": "./paths/parseTransaction.json"
    },
    "/api?requestType=backupDB": {
      "$ref": "./paths/admin/backupDB.json"
    },
    "/api?requestType=popOff": {
      "$ref": "./paths/admin/popOff.json"
    },
    "/api?requestType=clearUnconfirmedTransactions": {
      "$ref": "./paths/admin/clearUnconfirmedTransactions.json"
    },
    "/api?requestType=fullReset": {
      "$ref": "./paths/admin/fullReset.json"
    },
    "/api?requestType=issueAsset": {
      "$ref": "./paths/token/issueAsset.json"
    },
    "/api?requestType=mintAsset": {
      "$ref": "./paths/token/mintAsset.json"
    }
  },
  "components": {
    "schemas": {
      "address": {
        "$ref": "./schemas/address.json"
      },
      "amount": {
        "$ref": "./schemas/amount.json"
      },
      "hash": {
        "$ref": "./schemas/hash.json"
      },
      "hexString": {
        "$ref": "./schemas/hexString.json"
      },
      "quantity": {
        "$ref": "./schemas/quantity.json"
      },
      "numericId": {
        "$ref": "./schemas/numericId.json"
      },
      "rsAddress": {
        "$ref": "./schemas/rsAddress.json"
      },
      "timestamp": {
        "$ref": "./schemas/timestamp.json"
      },
      "transaction": {
        "$ref": "./schemas/transaction.json"
      },
      "transactionId": {
        "$ref": "./schemas/transactionId.json"
      }
    },
    "headers": {},
    "parameters": {
      "apiKey": {
        "$ref": "./parameters/apiKey.json"
      },
      "amountNQT": {
        "$ref": "./parameters/transaction/amountNQT.json"
      },
      "quantityQNT": {
        "$ref": "./parameters/transaction/quantityQNT.json"
      },
      "feeNQT": {
        "$ref": "./parameters/transaction/feeNQT.json"
      },
      "secretPhrase": {
        "$ref": "./parameters/transaction/secretPhrase.json"
      },
      "publicKey": {
        "$ref": "./parameters/transaction/publicKey.json"
      },
      "deadline": {
        "$ref": "./parameters/transaction/deadline.json"
      },
      "broadcast": {
        "$ref": "./parameters/transaction/broadcast.json"
      },
      "recipient": {
        "$ref": "./parameters/transaction/recipient.json"
      },
      "recipientPublicKey": {
        "$ref": "./parameters/transaction/recipientPublicKey.json"
      },
      "referencedTransactionFullHash": {
        "$ref": "./parameters/transaction/referencedTransactionFullHash.json"
      },
      "message": {
        "$ref": "./parameters/transaction/message.json"
      },
      "messageIsText": {
        "$ref": "./parameters/transaction/messageIsText.json"
      },
      "messageToEncrypt": {
        "$ref": "./parameters/transaction/messageToEncrypt.json"
      },
      "messageToEncryptIsText": {
        "$ref": "./parameters/transaction/messageToEncryptIsText.json"
      },
      "encryptedMessageData": {
        "$ref": "./parameters/transaction/encryptedMessageData.json"
      },
      "encryptedMessageNonce": {
        "$ref": "./parameters/transaction/encryptedMessageNonce.json"
      },
      "messageToEncryptToSelf": {
        "$ref": "./parameters/transaction/messageToEncryptToSelf.json"
      },
      "messageToEncryptToSelfIsText": {
        "$ref": "./parameters/transaction/messageToEncryptToSelfIsText.json"
      },
      "encryptToSelfMessageData": {
        "$ref": "./parameters/transaction/encryptToSelfMessageData.json"
      },
      "encryptToSelfMessageNonce": {
        "$ref": "./parameters/transaction/encryptToSelfMessageNonce.json"
      }
    },
    "responses": {
      "empty": {
        "$ref": "./responses/empty.json"
      },
      "error": {
        "$ref": "./responses/error.json"
      },
      "transaction": {
        "$ref": "./responses/transaction.json"
      }
    }
  },
  "tags": [
    {
      "name": "account",
      "description": "All Account related operations"
    },
    {
      "name": "payment",
      "description": "Functions which are related to value transfers of the base token, i.e. Signa"
    },
    {
      "name": "token",
      "description": "All operations related to Tokens and Tokenomics"
    },
    {
      "name": "contract",
      "description": "All operations related to Smart Contracts"
    },
    {
      "name": "network",
      "description": "All network and or node related operations"
    },
    {
      "name": "mining",
      "description": "All mining related methods"
    },
    {
      "name": "utility",
      "description": "Additional utility and/or low-level operations"
    },
    {
      "name": "admin",
      "description": "Administrative operations which requires an API Key to be configured in the node.</br>\uD83D\uDD13 __Security Advice: Use a very strong and truly random key, or even disable admin operation entirely in your node config. Exposing admin operations is a security risk.__"
    },
  ]
}